{
  "openapi": "3.0.0",
  "info": {
    "title": "Smidgen",
    "description": "API for interacting with Smidgen.",
    "contact": {
      "name": "Smidgen",
      "url": "https://example.com/",
      "email": "contact@josehernandez.dev"
    },
    "license": {
      "name": " GNU AFFERO GENERAL PUBLIC LICENSE Version 3, 19 November 2007",
      "url": "https://www.gnu.org/licenses/agpl-3.0.en.html"
    },
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "/api/v1"
    }
  ],
  "paths": {
    "/user/": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get Users",
        "description": "Get all Users stored in the database.",
        "operationId": "get_user_user__get",
        "responses": {
          "200": {
            "description": "The data was found and has been returned.",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/user"
                  },
                  "type": "array",
                  "title": "Response Get User User  Get"
                }
              }
            }
          },
          "404": {
            "description": "The data requested was not found in the database."
          },
          "401": {
            "description": "You are unauthorized to view this resource."
          },
          "403": {
            "description": "Access to this page is forbidden. Please reference the API documentation for more information."
          },
          "500": {
            "description": "An unexpected error has occured."
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "Create a new user in the database.",
        "operationId": "add_user_user__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "The data received was accepted and is quered for addition to the database.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "200": {
            "description": "The data was found and has been returned."
          },
          "404": {
            "description": "The data requested was not found in the database."
          },
          "401": {
            "description": "You are unauthorized to view this resource."
          },
          "403": {
            "description": "Access to this page is forbidden. Please reference the API documentation for more information."
          },
          "500": {
            "description": "An unexpected error has occured."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/{user_id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user",
        "description": "Get the specified user stored in the database.",
        "operationId": "get_User_user__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data was found and has been returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "404": {
            "description": "The data requested was not found in the database."
          },
          "401": {
            "description": "You are unauthorized to view this resource."
          },
          "403": {
            "description": "Access to this page is forbidden. Please reference the API documentation for more information."
          },
          "500": {
            "description": "An unexpected error has occured."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "description": "Delete the specified user from the database.",
        "operationId": "delete_user_user__user_id__delete",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The data received was accepted and is quered for addition to the database.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "200": {
            "description": "The data was found and has been returned."
          },
          "404": {
            "description": "The data requested was not found in the database."
          },
          "401": {
            "description": "You are unauthorized to view this resource."
          },
          "403": {
            "description": "Access to this page is forbidden. Please reference the API documentation for more information."
          },
          "500": {
            "description": "An unexpected error has occured."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update user",
        "description": "Update the specified user in the database.",
        "operationId": "update_user_user__user_id__put",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The data received was accepted and is quered for addition to the database.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "200": {
            "description": "The data was found and has been returned."
          },
          "404": {
            "description": "The data requested was not found in the database."
          },
          "401": {
            "description": "You are unauthorized to view this resource."
          },
          "403": {
            "description": "Access to this page is forbidden. Please reference the API documentation for more information."
          },
          "500": {
            "description": "An unexpected error has occured."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/equipment/": {
      "get": {
        "tags": [
          "equipment"
        ],
        "summary": "Get equipments",
        "description": "Get all equipments stored in the database.",
        "operationId": "get_equipment_equipment__get",
        "responses": {
          "200": {
            "description": "The data was found and has been returned.",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/equipment"
                  },
                  "type": "array",
                  "title": "Response Get Equipment Equipment  Get"
                }
              }
            }
          },
          "404": {
            "description": "The data requested was not found in the database."
          },
          "401": {
            "description": "You are unauthorized to view this resource."
          },
          "403": {
            "description": "Access to this page is forbidden. Please reference the API documentation for more information."
          },
          "500": {
            "description": "An unexpected error has occured."
          }
        }
      },
      "post": {
        "tags": [
          "equipment"
        ],
        "summary": "Create equipment",
        "description": "Create a new equipment in the database.",
        "operationId": "add_equipment_equipment__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/equipment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "The data received was accepted and is quered for addition to the database.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "200": {
            "description": "The data was found and has been returned."
          },
          "404": {
            "description": "The data requested was not found in the database."
          },
          "401": {
            "description": "You are unauthorized to view this resource."
          },
          "403": {
            "description": "Access to this page is forbidden. Please reference the API documentation for more information."
          },
          "500": {
            "description": "An unexpected error has occured."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/equipment/{equipment_id}": {
      "get": {
        "tags": [
          "equipment"
        ],
        "summary": "Get equipment",
        "description": "Get the specified equipment stored in the database.",
        "operationId": "get_equipments_equipment__equipment_id__get",
        "parameters": [
          {
            "name": "equipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Equipment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data was found and has been returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/equipment"
                }
              }
            }
          },
          "404": {
            "description": "The data requested was not found in the database."
          },
          "401": {
            "description": "You are unauthorized to view this resource."
          },
          "403": {
            "description": "Access to this page is forbidden. Please reference the API documentation for more information."
          },
          "500": {
            "description": "An unexpected error has occured."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "equipment"
        ],
        "summary": "Delete equipment",
        "description": "Delete the specified equipment from the database.",
        "operationId": "delete_equipment_equipment__equipment_id__delete",
        "parameters": [
          {
            "name": "equipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Equipment Id"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The data received was accepted and is quered for addition to the database.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "200": {
            "description": "The data was found and has been returned."
          },
          "404": {
            "description": "The data requested was not found in the database."
          },
          "401": {
            "description": "You are unauthorized to view this resource."
          },
          "403": {
            "description": "Access to this page is forbidden. Please reference the API documentation for more information."
          },
          "500": {
            "description": "An unexpected error has occured."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "equipment"
        ],
        "summary": "Update equipment",
        "description": "Update the specified equipment in the database.",
        "operationId": "update_equipment_equipment__equipment_id__put",
        "parameters": [
          {
            "name": "equipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Equipment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/equipment"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The data received was accepted and is quered for addition to the database.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "200": {
            "description": "The data was found and has been returned."
          },
          "404": {
            "description": "The data requested was not found in the database."
          },
          "401": {
            "description": "You are unauthorized to view this resource."
          },
          "403": {
            "description": "Access to this page is forbidden. Please reference the API documentation for more information."
          },
          "500": {
            "description": "An unexpected error has occured."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/equipment_assignment/": {
      "get": {
        "tags": [
          "equipment assignment"
        ],
        "summary": "Get assignments",
        "description": "Get all assignments stored in the database.",
        "operationId": "get_assignment_equipment_assignment__get",
        "responses": {
          "200": {
            "description": "The data was found and has been returned.",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/equipment_assignment"
                  },
                  "type": "array",
                  "title": "Response Get Assignment Equipment Assignment  Get"
                }
              }
            }
          },
          "404": {
            "description": "The data requested was not found in the database."
          },
          "401": {
            "description": "You are unauthorized to view this resource."
          },
          "403": {
            "description": "Access to this page is forbidden. Please reference the API documentation for more information."
          },
          "500": {
            "description": "An unexpected error has occured."
          }
        }
      },
      "post": {
        "tags": [
          "equipment assignment"
        ],
        "summary": "Create assignment",
        "description": "Create a new assignment in the database.",
        "operationId": "add_assignment_equipment_assignment__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/equipment_assignment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "The data received was accepted and is quered for addition to the database.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "200": {
            "description": "The data was found and has been returned."
          },
          "404": {
            "description": "The data requested was not found in the database."
          },
          "401": {
            "description": "You are unauthorized to view this resource."
          },
          "403": {
            "description": "Access to this page is forbidden. Please reference the API documentation for more information."
          },
          "500": {
            "description": "An unexpected error has occured."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/equipment_assignment/{assignment_id}": {
      "get": {
        "tags": [
          "equipment assignment"
        ],
        "summary": "Get assignment",
        "description": "Get the specified assignment stored in the database.",
        "operationId": "get_assignments_equipment_assignment__assignment_id__get",
        "parameters": [
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Assignment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data was found and has been returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/equipment_assignment"
                }
              }
            }
          },
          "404": {
            "description": "The data requested was not found in the database."
          },
          "401": {
            "description": "You are unauthorized to view this resource."
          },
          "403": {
            "description": "Access to this page is forbidden. Please reference the API documentation for more information."
          },
          "500": {
            "description": "An unexpected error has occured."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "equipment assignment"
        ],
        "summary": "Delete assignment",
        "description": "Delete the specified assignment from the database.",
        "operationId": "delete_assignment_equipment_assignment__assignment_id__delete",
        "parameters": [
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Assignment Id"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The data received was accepted and is quered for addition to the database.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "200": {
            "description": "The data was found and has been returned."
          },
          "404": {
            "description": "The data requested was not found in the database."
          },
          "401": {
            "description": "You are unauthorized to view this resource."
          },
          "403": {
            "description": "Access to this page is forbidden. Please reference the API documentation for more information."
          },
          "500": {
            "description": "An unexpected error has occured."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "equipment assignment"
        ],
        "summary": "Update assignment",
        "description": "Update the specified assignment in the database.",
        "operationId": "update_assignment_equipment_assignment__assignment_id__put",
        "parameters": [
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Assignment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/equipment_assignment"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The data received was accepted and is quered for addition to the database.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "200": {
            "description": "The data was found and has been returned."
          },
          "404": {
            "description": "The data requested was not found in the database."
          },
          "401": {
            "description": "You are unauthorized to view this resource."
          },
          "403": {
            "description": "Access to this page is forbidden. Please reference the API documentation for more information."
          },
          "500": {
            "description": "An unexpected error has occured."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/business_unit/": {
      "get": {
        "tags": [
          "business unit"
        ],
        "summary": "Get Business Units",
        "description": "Get all business units stored in the database.",
        "operationId": "get_unit_business_unit__get",
        "responses": {
          "200": {
            "description": "The data was found and has been returned.",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/business_unit"
                  },
                  "type": "array",
                  "title": "Response Get Unit Business Unit  Get"
                }
              }
            }
          },
          "404": {
            "description": "The data requested was not found in the database."
          },
          "401": {
            "description": "You are unauthorized to view this resource."
          },
          "403": {
            "description": "Access to this page is forbidden. Please reference the API documentation for more information."
          },
          "500": {
            "description": "An unexpected error has occured."
          }
        }
      },
      "post": {
        "tags": [
          "business unit"
        ],
        "summary": "Create Business Unit",
        "description": "Create a new business unit in the database.",
        "operationId": "add_unit_business_unit__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/business_unit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "The data received was accepted and is quered for addition to the database.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "200": {
            "description": "The data was found and has been returned."
          },
          "404": {
            "description": "The data requested was not found in the database."
          },
          "401": {
            "description": "You are unauthorized to view this resource."
          },
          "403": {
            "description": "Access to this page is forbidden. Please reference the API documentation for more information."
          },
          "500": {
            "description": "An unexpected error has occured."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/business_unit/{unit_id}": {
      "get": {
        "tags": [
          "business unit"
        ],
        "summary": "Get Business Unit",
        "description": "Get the specified business unit stored in the database.",
        "operationId": "get_units_business_unit__unit_id__get",
        "parameters": [
          {
            "name": "unit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Unit Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data was found and has been returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/business_unit"
                }
              }
            }
          },
          "404": {
            "description": "The data requested was not found in the database."
          },
          "401": {
            "description": "You are unauthorized to view this resource."
          },
          "403": {
            "description": "Access to this page is forbidden. Please reference the API documentation for more information."
          },
          "500": {
            "description": "An unexpected error has occured."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "business unit"
        ],
        "summary": "Delete Business Unit",
        "description": "Delete the specified business unit from the database.",
        "operationId": "delete_unit_business_unit__unit_id__delete",
        "parameters": [
          {
            "name": "unit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Unit Id"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The data received was accepted and is quered for addition to the database.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "200": {
            "description": "The data was found and has been returned."
          },
          "404": {
            "description": "The data requested was not found in the database."
          },
          "401": {
            "description": "You are unauthorized to view this resource."
          },
          "403": {
            "description": "Access to this page is forbidden. Please reference the API documentation for more information."
          },
          "500": {
            "description": "An unexpected error has occured."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "business unit"
        ],
        "summary": "Update Business Unit",
        "description": "Update the specified business unit in the database.",
        "operationId": "update_unit_business_unit__unit_id__put",
        "parameters": [
          {
            "name": "unit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Unit Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/business_unit"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The data received was accepted and is quered for addition to the database.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "200": {
            "description": "The data was found and has been returned."
          },
          "404": {
            "description": "The data requested was not found in the database."
          },
          "401": {
            "description": "You are unauthorized to view this resource."
          },
          "403": {
            "description": "Access to this page is forbidden. Please reference the API documentation for more information."
          },
          "500": {
            "description": "An unexpected error has occured."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "The data was found and has been returned.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "The data requested was not found in the database."
          },
          "401": {
            "description": "Access to this page is forbidden. Please reference the API documentation for more information."
          },
          "403": {
            "description": "Access to this page is forbidden. Please reference the API documentation for more information."
          },
          "500": {
            "description": "An unexpected error has occured."
          }
        }
      }
    },
    "/healthcheck": {
      "get": {
        "summary": "Check",
        "operationId": "check_healthcheck_get",
        "responses": {
          "200": {
            "description": "The data was found and has been returned.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "The data requested was not found in the database."
          },
          "401": {
            "description": "You are unauthorized to view this resource."
          },
          "403": {
            "description": "Access to this page is forbidden. Please reference the API documentation for more information."
          },
          "500": {
            "description": "An unexpected error has occured."
          },
          "501": {
            "description": "This resource has not been implemented yet."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "business_unit": {
        "properties": {
          "unit_id": {
            "type": "integer",
            "title": "Unit Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "point_of_contact": {
            "type": "string",
            "title": "Point Of Contact"
          },
          "address_line_one": {
            "type": "string",
            "title": "Address Line One"
          },
          "address_line_two": {
            "type": "string",
            "title": "Address Line Two"
          },
          "state": {
            "type": "string",
            "title": "State"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "country": {
            "type": "string",
            "title": "Country"
          }
        },
        "type": "object",
        "required": [
          "unit_id",
          "name",
          "point_of_contact",
          "address_line_one",
          "address_line_two",
          "state",
          "city",
          "country"
        ],
        "title": "business_unit"
      },
      "equipment": {
        "properties": {
          "equipment_id": {
            "type": "integer",
            "title": "Equipment Id"
          },
          "business_unit_id": {
            "type": "integer",
            "title": "Business Unit Id"
          },
          "manufacturer": {
            "type": "string",
            "title": "Manufacturer"
          },
          "model": {
            "type": "string",
            "title": "Model"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "date_received": {
            "type": "string",
            "format": "date-time",
            "title": "Date Received"
          },
          "last_inventoried": {
            "type": "string",
            "format": "date-time",
            "title": "Last Inventoried"
          }
        },
        "type": "object",
        "required": [
          "equipment_id",
          "business_unit_id",
          "manufacturer",
          "model",
          "description",
          "date_received",
          "last_inventoried"
        ],
        "title": "equipment"
      },
      "equipment_assignment": {
        "properties": {
          "assignment_id": {
            "type": "integer",
            "title": "Assignment Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "equipment_id": {
            "type": "integer",
            "title": "Equipment Id"
          },
          "date_of_assignment": {
            "type": "string",
            "format": "date-time",
            "title": "Date Of Assignment"
          }
        },
        "type": "object",
        "required": [
          "assignment_id",
          "user_id",
          "equipment_id",
          "date_of_assignment"
        ],
        "title": "equipment_assignment"
      },
      "user": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "business_unit_id": {
            "type": "integer",
            "title": "Business Unit Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "business_unit_id",
          "username",
          "email"
        ],
        "title": "user"
      }
    }
  }
}