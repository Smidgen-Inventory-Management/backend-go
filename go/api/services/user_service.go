/*
 * api
 *
 * API for interacting with api.
 *
 * API version: 0.0.1
 * Contact: contact@josehernandez.dev
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package smidgen

import (
	"context"
	"errors"
	"fmt"
	"log"
	"net/http"
	api "smidgen-backend/go/api"
	models "smidgen-backend/go/models"
	utils "smidgen-backend/go/utils"
)

// UserAPIService is a service that implements the logic for the UserAPIServicer
// This service should implement the business logic for every endpoint for the UserAPI API.
// Include any external packages or services that will be required by this service.
type UserAPIService struct {
}

// NewUserAPIService creates a default api service
func NewUserAPIService() api.UserAPIServicer {
	return &UserAPIService{}
}

// AddUserUserPost - Create user
func (s *UserAPIService) AddUserUserPost(ctx context.Context, user models.User) (utils.ImplResponse, error) {
	// TODO - update AddUserUserPost with the required logic for this service method.
	// Add api_user_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response utils.Response(202, interface{}{}) or use other options such as http.Ok ...
	// return utils.Response(202, interface{}{}), nil

	// TODO: Uncomment the next line to return response utils.Response(200, {}) or use other options such as http.Ok ...
	// return utils.Response(200, nil),nil

	// TODO: Uncomment the next line to return response utils.Response(404, {}) or use other options such as http.Ok ...
	// return utils.Response(404, nil),nil

	// TODO: Uncomment the next line to return response utils.Response(401, {}) or use other options such as http.Ok ...
	// return utils.Response(401, nil),nil

	// TODO: Uncomment the next line to return response utils.Response(403, {}) or use other options such as http.Ok ...
	// return utils.Response(403, nil),nil

	// TODO: Uncomment the next line to return response utils.Response(500, {}) or use other options such as http.Ok ...
	// return utils.Response(500, nil),nil

	// TODO: Uncomment the next line to return response utils.Response(422, HttpValidationError{}) or use other options such as http.Ok ...
	// return utils.Response(422, HttpValidationError{}), nil

	return utils.Response(http.StatusNotImplemented, nil), errors.New("AddUserUserPost method not implemented")
}

// DeleteUserUserUserIdDelete - Delete user
func (s *UserAPIService) DeleteUserUserUserIdDelete(ctx context.Context, userId int32) (utils.ImplResponse, error) {
	// TODO - update DeleteUserUserUserIdDelete with the required logic for this service method.
	// Add api_user_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response utils.Response(202, interface{}{}) or use other options such as http.Ok ...
	// return utils.Response(202, interface{}{}), nil

	// TODO: Uncomment the next line to return response utils.Response(200, {}) or use other options such as http.Ok ...
	// return utils.Response(200, nil),nil

	// TODO: Uncomment the next line to return response utils.Response(404, {}) or use other options such as http.Ok ...
	// return utils.Response(404, nil),nil

	// TODO: Uncomment the next line to return response utils.Response(401, {}) or use other options such as http.Ok ...
	// return utils.Response(401, nil),nil

	// TODO: Uncomment the next line to return response utils.Response(403, {}) or use other options such as http.Ok ...
	// return utils.Response(403, nil),nil

	// TODO: Uncomment the next line to return response utils.Response(500, {}) or use other options such as http.Ok ...
	// return utils.Response(500, nil),nil

	// TODO: Uncomment the next line to return response utils.Response(422, HttpValidationError{}) or use other options such as http.Ok ...
	// return utils.Response(422, HttpValidationError{}), nil

	return utils.Response(http.StatusNotImplemented, nil), errors.New("DeleteUserUserUserIdDelete method not implemented")
}

// GetUserUserGet - Get Users
func (s *UserAPIService) GetUserUserGet(ctx context.Context) (utils.ImplResponse, error) {
	// Add api_user_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	privilege := "read"
	dbConnection, err := utils.NewDatabaseConnection(privilege)
	if err != nil {
		log.Fatalf("Failed to establish database connection as %s: %v", privilege, err)
	}

	var dest models.User
	rows, err := dbConnection.GetRows("user_table", &dest)
	if err != nil {
		fmt.Println("Error:", err)

	}

	var users []models.User
	for _, row := range rows {
		user, ok := row.(models.User)
		if !ok {
			fmt.Println("Error: Unexpected type in row")
			continue
		}
		users = append(users, user)
	}

	return utils.Response(200, users), nil

}

// GetUserUserUserIdGet - Get user
func (s *UserAPIService) GetUserUserUserIdGet(ctx context.Context, userId int32) (utils.ImplResponse, error) {
	// TODO - update GetUserUserUserIdGet with the required logic for this service method.
	// Add api_user_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response utils.Response(200, User{}) or use other options such as http.Ok ...
	// return utils.Response(200, User{}), nil

	// TODO: Uncomment the next line to return response utils.Response(404, {}) or use other options such as http.Ok ...
	// return utils.Response(404, nil),nil

	// TODO: Uncomment the next line to return response utils.Response(401, {}) or use other options such as http.Ok ...
	// return utils.Response(401, nil),nil

	// TODO: Uncomment the next line to return response utils.Response(403, {}) or use other options such as http.Ok ...
	// return utils.Response(403, nil),nil

	// TODO: Uncomment the next line to return response utils.Response(500, {}) or use other options such as http.Ok ...
	// return utils.Response(500, nil),nil

	// TODO: Uncomment the next line to return response utils.Response(422, HttpValidationError{}) or use other options such as http.Ok ...
	// return utils.Response(422, HttpValidationError{}), nil

	return utils.Response(http.StatusNotImplemented, nil), errors.New("GetUserUserUserIdGet method not implemented")
}

// UpdateUserUserUserIdPut - Update user
func (s *UserAPIService) UpdateUserUserUserIdPut(ctx context.Context, userId int32, user models.User) (utils.ImplResponse, error) {
	// TODO - update UpdateUserUserUserIdPut with the required logic for this service method.
	// Add api_user_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response utils.Response(202, interface{}{}) or use other options such as http.Ok ...
	// return utils.Response(202, interface{}{}), nil

	// TODO: Uncomment the next line to return response utils.Response(200, {}) or use other options such as http.Ok ...
	// return utils.Response(200, nil),nil

	// TODO: Uncomment the next line to return response utils.Response(404, {}) or use other options such as http.Ok ...
	// return utils.Response(404, nil),nil

	// TODO: Uncomment the next line to return response utils.Response(401, {}) or use other options such as http.Ok ...
	// return utils.Response(401, nil),nil

	// TODO: Uncomment the next line to return response utils.Response(403, {}) or use other options such as http.Ok ...
	// return utils.Response(403, nil),nil

	// TODO: Uncomment the next line to return response utils.Response(500, {}) or use other options such as http.Ok ...
	// return utils.Response(500, nil),nil

	// TODO: Uncomment the next line to return response utils.Response(422, HttpValidationError{}) or use other options such as http.Ok ...
	// return utils.Response(422, HttpValidationError{}), nil

	return utils.Response(http.StatusNotImplemented, nil), errors.New("UpdateUserUserUserIdPut method not implemented")
}
