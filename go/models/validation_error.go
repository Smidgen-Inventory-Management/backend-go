/*
 * model
 *
 * API for interacting with model.
 *
 * API version: 0.0.1
 * Contact: contact@josehernandez.dev
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package smidgen

import (
	utils "smidgen-backend/go/utils"
)

type ValidationError struct {
	Loc []LocationInner `json:"loc"`

	Msg string `json:"msg"`

	Type string `json:"type"`
}

// AssertValidationErrorRequired checks if the required fields are not zero-ed
func AssertValidationErrorRequired(obj ValidationError) error {
	elements := map[string]interface{}{
		"loc":  obj.Loc,
		"msg":  obj.Msg,
		"type": obj.Type,
	}
	for name, el := range elements {
		if isZero := utils.IsZeroValue(el); isZero {
			return &utils.RequiredError{Field: name}
		}
	}

	for _, el := range obj.Loc {
		if err := AssertLocationInnerRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertValidationErrorConstraints checks if the values respects the defined constraints
func AssertValidationErrorConstraints(obj ValidationError) error {
	return nil
}
