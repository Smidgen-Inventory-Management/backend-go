/*
 * model
 *
 * API for interacting with model.
 *
 * API version: 0.0.1
 * Contact: contact@josehernandez.dev
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package smidgen

import (
	utils "smidgen-backend/go/utils"
	"time"
)

type Equipment struct {
	EquipmentId int32 `json:"equipment_id"`

	BusinessUnitId int32 `json:"business_unit_id"`

	Manufacturer string `json:"manufacturer"`

	Model string `json:"model"`

	Description string `json:"description"`

	DateReceived time.Time `json:"date_received"`

	LastInventoried time.Time `json:"last_inventoried"`
}

func AssertEquipmentRequired(obj Equipment) error {
	elements := map[string]interface{}{
		"equipment_id":     obj.EquipmentId,
		"business_unit_id": obj.BusinessUnitId,
		"manufacturer":     obj.Manufacturer,
		"model":            obj.Model,
		"description":      obj.Description,
		"date_received":    obj.DateReceived,
		"last_inventoried": obj.LastInventoried,
	}
	for name, el := range elements {
		if isZero := utils.IsZeroValue(el); isZero {
			return &utils.RequiredError{Field: name}
		}
	}

	return nil
}

// AssertEquipmentConstraints checks if the values respects the defined constraints
func AssertEquipmentConstraints(obj Equipment) error {
	return nil
}
